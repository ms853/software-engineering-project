buildscript {
  ext { springBootVersion = '1.4.1.RELEASE' }
  repositories { jcenter() }
  dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

jar {
  baseName = 'ecourse'
  version = '0.1'
}

repositories { jcenter() }

// eclipse project configuration
eclipse {
  project {
    name = 'FDMeCourseProject'
    buildCommand 'org.eclipse.jdt.core.javabuilder'
    buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
    buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
    buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
    natures 'org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature',
        'org.springframework.ide.eclipse.core.springnature', 'org.eclipse.wst.common.project.facet.core.nature'
  }
}

dependencies {

  // spring boot
  compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
  testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

  // hamcrest
  compile('org.hamcrest:hamcrest-core:1.3')
  compile('org.hamcrest:hamcrest-library:1.3')

  // jsp
  compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.0.M11")
  compile("javax.servlet:jstl:1.2")

  // bootstrap
  compile("org.webjars:bootstrap:3.3.7")

  // ajax
  compile('org.ajax4jsf:ajax4jsf:1.0.5')

  //json
  compile group: 'org.json', name: 'json', version: '20090211'

  //mail
  compile 'javax.mail:mail:1.4.7'
  compile group: 'org.springframework', name: 'spring-context-support', version: '3.2.8.RELEASE'

  // cucumber & junit
  testCompile("info.cukes:cucumber-spring:1.2.5")
  testCompile("info.cukes:cucumber-java:1.2.5")
  testCompile("info.cukes:cucumber-junit:1.2.5")
  testCompile("junit:junit:4.12")

  // persistence
  compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
  runtime("mysql:mysql-connector-java")

  // security
  compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
  
  // totp (for 2fa)
  compile("org.jboss.aerogear:aerogear-otp-java:1.0.0")
  
}

task wrapper(type: Wrapper) { gradleVersion = '3.1' }

// configure checkstyle plugin
checkstyle {
  toolVersion = '6.1.1'
  configFile = './config/checkstyle/google_checks_no_import_ordering.xml' as File
}

// configure findbugs plugin task to generate html reports
tasks.withType(FindBugs) {
  reports {
    xml.enabled false
    html.enabled true
    html.stylesheet resources.text.fromFile('./config/xsl/findbugs-stylesheet.xsl')
  }
}

// generate javadocs in main code after compileJava
compileJava { finalizedBy javadoc }

configurations { cucumberRuntime { extendsFrom testRuntime } }

task cucumber() {
  dependsOn assemble, compileTestJava
  doLast {
    javaexec {
      main = "cucumber.api.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
      if (project.hasProperty("tags")) {
        args = ['--plugin', 'pretty', '--glue', 'ecourse.step', 'src/test/resources', '--tags', tags]
      } else {
        args = ['--plugin', 'pretty', '--glue', 'ecourse.step', 'src/test/resources']
      }
    }
  }
}
